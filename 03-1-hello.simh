# [定数]
# "HELLO WORLD!"
d 000 000110
d 001 000105
d 002 000114
d 003 000114
d 004 000117
d 005 000040
d 006 000127
d 007 000117
d 010 000122
d 011 000114
d 012 000104
d 013 000041
d 014 000000

# [メイン処理]
d -m 100 jms 400
d -m 101 hlt

# [300: 指定された1文字を出力する関数]
# ACレジスタに設定されている文字(ASCII)を出力する
# - 文字出力完了フラグをクリア
d -m 301 tcf
# - ACレジスタの文字を出力バッファへ設定
d -m 302 tls
# - 文字出力完了フラグがセットされていれば次の命令をスキップ
d -m 303 tsf
# - TSF命令へ戻る
d -m 304 jmp 303
# - return
d -m 305 jmp i 300

# [400: 指定された文字列を出力する関数]
# ACレジスタにアドレスで指定されている文字列を出力する
# - ACレジスタの値(文字列の先頭アドレス)をアドレス0o460へ設定
d -m 401 dac 460
# - アドレス0o460に書かれているアドレスから次の文字をACレジスタへ取得
d -m 402 lac i 460
# - 取得した文字が0(NULL)なら次の命令をスキップ
d -m 403 sza
# - NULLでないなら、文字出力へ
d -m 404 jmp 406
# - return
d -m 405 jmp i 400
# - ACレジスタに設定されている文字を出力する関数呼び出し
d -m 406 jms 300
# - アドレス0o460の値(今出力した文字のアドレス)をACレジスタへ設定
d -m 407 lac 460
# - ACレジスタへ定数1を加算(アドレスを次の文字へ進める)
d -m 410 add 461
# - ACレジスタの値をアドレス0o460へ書き戻す
d -m 411 dac 460
# - 次の文字の取得へ戻る
d -m 412 jmp 402
# 関数内変数/定数
# - 460: 次に出力する文字のアドレス
# - 定数1
d 461 000001

# [実行]
# 文字列の先頭アドレスをACレジスタへ設定
d ac 0
# メイン処理を実行
go 100

# [終了]
by
